// <auto-generated />
using System;
using BixWeb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BixWeb.Migrations
{
    [DbContext(typeof(DbPrint))]
    [Migration("20250827160530_etariaadd")]
    partial class etariaadd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BixWeb.Models.Campanha", b =>
                {
                    b.Property<int>("codCampanha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codCampanha"));

                    b.Property<bool>("campanhaAtiva")
                        .HasColumnType("bit");

                    b.Property<int>("codFilial")
                        .HasColumnType("int");

                    b.Property<int>("codUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataPostCampanha")
                        .HasColumnType("datetime2");

                    b.Property<string>("linkCardapio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("matriculaFuncionario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeCampanha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("tipoCardapio")
                        .HasColumnType("int");

                    b.Property<string>("typeServise")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codCampanha");

                    b.HasIndex("codUsuario", "codFilial");

                    b.ToTable("Campanhas", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.Categoria", b =>
                {
                    b.Property<int>("codCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codCategoria"));

                    b.Property<bool>("ativo")
                        .HasColumnType("bit");

                    b.Property<int>("codRefExterna")
                        .HasColumnType("int");

                    b.Property<string>("corIcone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("codCategoria");

                    b.ToTable("Categorias", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.Convidado", b =>
                {
                    b.Property<int>("codConvidado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codConvidado"));

                    b.Property<int?>("IngressocodIngresso")
                        .HasColumnType("int");

                    b.Property<int>("codConvite")
                        .HasColumnType("int");

                    b.Property<int>("codIngresso")
                        .HasColumnType("int");

                    b.Property<string>("confirmacaoConvite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emailConvidado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeConvidado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefoneConvidado")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<bool?>("vistoConvite")
                        .HasColumnType("bit");

                    b.HasKey("codConvidado");

                    b.HasIndex("IngressocodIngresso");

                    b.HasIndex("codConvite");

                    b.ToTable("Convidados", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.Convite", b =>
                {
                    b.Property<int>("codConvite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codConvite"));

                    b.Property<bool>("ativo")
                        .HasColumnType("bit");

                    b.Property<int>("codCliente")
                        .HasColumnType("int");

                    b.Property<int?>("codCriador")
                        .HasColumnType("int");

                    b.Property<int?>("codEvento")
                        .HasColumnType("int");

                    b.Property<int?>("codFilial")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imagemConvite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("msgConvite")
                        .HasMaxLength(30000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("notificar")
                        .HasColumnType("int");

                    b.HasKey("codConvite");

                    b.HasIndex("codCliente");

                    b.HasIndex("codEvento");

                    b.HasIndex("codCriador", "codFilial");

                    b.ToTable("Convites", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.Cupom", b =>
                {
                    b.Property<int>("codCupom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codCupom"));

                    b.Property<int?>("codCampanha")
                        .HasColumnType("int");

                    b.Property<int>("codCriador")
                        .HasColumnType("int");

                    b.Property<int>("codFilial")
                        .HasColumnType("int");

                    b.Property<int?>("codcliente")
                        .HasColumnType("int");

                    b.Property<double>("descontoCupom")
                        .HasColumnType("float");

                    b.Property<string>("produtos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("statusCupom")
                        .HasColumnType("bit");

                    b.Property<string>("tokenCupom")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("usadoCupom")
                        .HasColumnType("bit");

                    b.Property<DateTime>("validadeCupom")
                        .HasColumnType("datetime2");

                    b.HasKey("codCupom");

                    b.HasIndex("codCampanha");

                    b.HasIndex("codcliente");

                    b.HasIndex("codCriador", "codFilial");

                    b.ToTable("Cupons", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.Dispositivo", b =>
                {
                    b.Property<int>("codDipositivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codDipositivo"));

                    b.Property<bool>("ativo")
                        .HasColumnType("bit");

                    b.Property<int>("codFilial")
                        .HasColumnType("int");

                    b.Property<string>("dispositivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("enderecoMac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoDisposito")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codDipositivo");

                    b.HasIndex("codFilial");

                    b.ToTable("Dispositivos", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.Endereco", b =>
                {
                    b.Property<int>("codEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codEndereco"));

                    b.Property<string>("bairro")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("cep")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("logradouro")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("numeroendereco")
                        .HasColumnType("int");

                    b.Property<string>("refenciaEndereco")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codEndereco");

                    b.ToTable("Enderecos", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.Evento", b =>
                {
                    b.Property<int>("codEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codEvento"));

                    b.Property<int?>("FilialcodFilial")
                        .HasColumnType("int");

                    b.Property<int?>("UsuariocodUsuario")
                        .HasColumnType("int");

                    b.Property<string>("bannerEvento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoriaEvento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("classificacaoEtaria")
                        .HasColumnType("int");

                    b.Property<int>("codEndereco")
                        .HasColumnType("int");

                    b.Property<int?>("codFilial")
                        .HasColumnType("int");

                    b.Property<int?>("codUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataCriacaoEvento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dataInicioEvento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dataTerminoEvento")
                        .HasColumnType("datetime2");

                    b.Property<string>("descricaoEvento")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("eventoGratuito")
                        .HasColumnType("bit");

                    b.Property<bool>("eventoPrivado")
                        .HasColumnType("bit");

                    b.Property<string>("linkCardapio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("linkEvento")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("nomeEvento")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("qtdTotalIngEvento")
                        .HasColumnType("int");

                    b.Property<int>("qtdlotesEvento")
                        .HasColumnType("int");

                    b.Property<bool>("statusEvento")
                        .HasColumnType("bit");

                    b.Property<string>("thumbnailEvento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipoCardapio")
                        .HasColumnType("int");

                    b.Property<string>("tipoEvento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codEvento");

                    b.HasIndex("FilialcodFilial");

                    b.HasIndex("UsuariocodUsuario");

                    b.HasIndex("codEndereco");

                    b.HasIndex("codUsuario", "codFilial");

                    b.ToTable("Eventos", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.Filial", b =>
                {
                    b.Property<int>("codFilial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codFilial"));

                    b.Property<bool>("ativo")
                        .HasColumnType("bit");

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<int>("codEndereco")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("logoHome")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("logoPDV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("telefone")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.HasKey("codFilial");

                    b.HasIndex("codEndereco")
                        .IsUnique();

                    b.ToTable("Filiais", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.GenerativeIA", b =>
                {
                    b.Property<int>("codIA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codIA"));

                    b.Property<string>("chaveIA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoIA")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codIA");

                    b.ToTable("GenerativeIAs", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.Ingresso", b =>
                {
                    b.Property<int>("codIngresso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codIngresso"));

                    b.Property<string>("EmailIngresso")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NomeIngresso")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("ativoIngresso")
                        .HasColumnType("bit");

                    b.Property<int?>("codConvite")
                        .HasColumnType("int");

                    b.Property<int>("codLote")
                        .HasColumnType("int");

                    b.Property<int?>("codReciboIngresso")
                        .HasColumnType("int");

                    b.Property<string>("cpfIngresso")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ticketIngresso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoVendaIngresso")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codIngresso");

                    b.HasIndex("codConvite");

                    b.HasIndex("codLote");

                    b.HasIndex("codReciboIngresso");

                    b.ToTable("Ingressos", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.ListaPresente", b =>
                {
                    b.Property<int>("codListaPres")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codListaPres"));

                    b.Property<int>("codConvite")
                        .HasColumnType("int");

                    b.Property<int>("codUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataLista")
                        .HasColumnType("datetime2");

                    b.HasKey("codListaPres");

                    b.HasIndex("codConvite")
                        .IsUnique();

                    b.HasIndex("codUsuario");

                    b.ToTable("ListaPresentes", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.LoginAPI", b =>
                {
                    b.Property<int>("codLoginAPI")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codLoginAPI"));

                    b.Property<string>("client_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("client_secret")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("codUsuario")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codLoginAPI");

                    b.HasIndex("codUsuario")
                        .IsUnique();

                    b.ToTable("LoginAPI", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.Lote", b =>
                {
                    b.Property<int>("codLote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codLote"));

                    b.Property<int>("codEvento")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataVendaLote")
                        .HasColumnType("datetime2");

                    b.Property<int>("numLote")
                        .HasColumnType("int");

                    b.Property<int>("qtdIngLote")
                        .HasColumnType("int");

                    b.Property<double>("valorLote")
                        .HasColumnType("float");

                    b.HasKey("codLote");

                    b.HasIndex("codEvento");

                    b.ToTable("Lotes", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.Modificador", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codigo"));

                    b.Property<bool>("ativo")
                        .HasColumnType("bit");

                    b.Property<string>("classificacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("classificacaoGrupo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("codEmpresa")
                        .HasColumnType("int");

                    b.Property<int>("codGrupo")
                        .HasColumnType("int");

                    b.Property<int>("codfilial")
                        .HasColumnType("int");

                    b.Property<int>("codmodificador")
                        .HasColumnType("int");

                    b.Property<int>("codproduto")
                        .HasColumnType("int");

                    b.Property<string>("descricaoGrupo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descricaoModificador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ordemGrupo")
                        .HasColumnType("int");

                    b.Property<int>("ordemModificador")
                        .HasColumnType("int");

                    b.Property<double>("preco")
                        .HasColumnType("float");

                    b.Property<int>("qtdMaxima")
                        .HasColumnType("int");

                    b.Property<int>("qtdMinima")
                        .HasColumnType("int");

                    b.HasKey("codigo");

                    b.HasIndex("codfilial");

                    b.HasIndex("codproduto");

                    b.ToTable("Modificadores", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.Preco", b =>
                {
                    b.Property<int>("codPreco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codPreco"));

                    b.Property<int>("codFilial")
                        .HasColumnType("int");

                    b.Property<int>("codProduto")
                        .HasColumnType("int");

                    b.Property<double>("valor")
                        .HasColumnType("float");

                    b.HasKey("codPreco");

                    b.HasIndex("codFilial");

                    b.HasIndex("codProduto");

                    b.ToTable("Precos", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.Presente", b =>
                {
                    b.Property<int>("codPresente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codPresente"));

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "descricao");

                    b.Property<string>("Imagem")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "imagem");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "nome");

                    b.Property<double>("Preco")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "preco");

                    b.Property<int>("codListaPresente")
                        .HasColumnType("int");

                    b.HasKey("codPresente");

                    b.HasIndex("codListaPresente");

                    b.ToTable("Presentes", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.Produto", b =>
                {
                    b.Property<int>("codProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codProduto"));

                    b.Property<bool?>("chamaModificadores")
                        .HasColumnType("bit");

                    b.Property<int>("codCategoria")
                        .HasColumnType("int");

                    b.Property<string>("descricaoDetalhada")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("imagem")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("nomeProduto")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("codProduto");

                    b.HasIndex("codCategoria");

                    b.ToTable("Produtos", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.ProdutoCampanha", b =>
                {
                    b.Property<int>("codProdCamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codProdCamp"));

                    b.Property<int?>("codCampanha")
                        .HasColumnType("int");

                    b.Property<int?>("codEvento")
                        .HasColumnType("int");

                    b.Property<int>("codProduto")
                        .HasColumnType("int");

                    b.Property<double>("valor")
                        .HasColumnType("float");

                    b.HasKey("codProdCamp");

                    b.HasIndex("codCampanha");

                    b.HasIndex("codEvento");

                    b.HasIndex("codProduto");

                    b.ToTable("ProdutosCampanha", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.ReciboIngresso", b =>
                {
                    b.Property<int>("codReciboIngresso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codReciboIngresso"));

                    b.Property<int?>("codUsuario")
                        .HasColumnType("int");

                    b.Property<string>("cpfCliente")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("dataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("emailCliente")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("nomeCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefoneCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("usuariocodUsuario")
                        .HasColumnType("int");

                    b.HasKey("codReciboIngresso");

                    b.HasIndex("usuariocodUsuario");

                    b.ToTable("ReciboIngressos", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.ReciboPresente", b =>
                {
                    b.Property<int>("codReciboPresente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codReciboPresente"));

                    b.Property<int>("codConvite")
                        .HasColumnType("int");

                    b.Property<int?>("codUsuario")
                        .HasColumnType("int");

                    b.Property<string>("cpfCliente")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("dataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("emailCliente")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("nomeCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefoneCliente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codReciboPresente");

                    b.HasIndex("codConvite");

                    b.HasIndex("codUsuario");

                    b.ToTable("RecibosPresentes", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.RegistroLogin", b =>
                {
                    b.Property<int>("codRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codRegistro"));

                    b.Property<bool>("ativo")
                        .HasColumnType("bit");

                    b.Property<int>("codDispositivo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fimLogin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("inicioLogin")
                        .HasColumnType("datetime2");

                    b.HasKey("codRegistro");

                    b.HasIndex("codDispositivo");

                    b.ToTable("RegistroLogins", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.Usuario", b =>
                {
                    b.Property<int>("codUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codUsuario"));

                    b.Property<bool?>("ativo")
                        .HasColumnType("bit");

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("imagem")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefone")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codUsuario");

                    b.ToTable("Usuario", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.UsuarioFilial", b =>
                {
                    b.Property<int>("codUsuario")
                        .HasColumnType("int");

                    b.Property<int>("codFilial")
                        .HasColumnType("int");

                    b.Property<bool>("ativo")
                        .HasColumnType("bit");

                    b.Property<string>("cargoUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("codRegistro")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<int>("pin")
                        .HasColumnType("int");

                    b.Property<string>("tipoUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codUsuario", "codFilial");

                    b.HasIndex("codFilial");

                    b.HasIndex("codRegistro")
                        .IsUnique()
                        .HasFilter("[codRegistro] IS NOT NULL");

                    b.ToTable("UsuarioFiliais", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.Voucher", b =>
                {
                    b.Property<int>("codVoucher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codVoucher"));

                    b.Property<bool>("ativo")
                        .HasColumnType("bit");

                    b.Property<int?>("codCampanha")
                        .HasColumnType("int");

                    b.Property<int?>("codCliente")
                        .HasColumnType("int");

                    b.Property<int>("codCriador")
                        .HasColumnType("int");

                    b.Property<int>("codFilial")
                        .HasColumnType("int");

                    b.Property<DateTime>("criacaoVoucher")
                        .HasColumnType("datetime2");

                    b.Property<bool>("exlusivo")
                        .HasColumnType("bit");

                    b.Property<string>("tokenVoucher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("utilizado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("validadeVoucher")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("valorDisponivel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("valorOriginal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("codVoucher");

                    b.HasIndex("codCampanha");

                    b.HasIndex("codCliente");

                    b.HasIndex("codCriador", "codFilial");

                    b.ToTable("Vouchers", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.WhatsApp", b =>
                {
                    b.Property<int>("codWhats")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codWhats"));

                    b.Property<DateTime>("atualizado")
                        .HasColumnType("datetime2");

                    b.Property<int?>("codFilial")
                        .HasColumnType("int");

                    b.Property<int?>("codUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime>("criado")
                        .HasColumnType("datetime2");

                    b.Property<string>("ntelefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("qrCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sessao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("codWhats");

                    b.HasIndex("codFilial")
                        .IsUnique()
                        .HasFilter("[codFilial] IS NOT NULL");

                    b.HasIndex("codUsuario")
                        .IsUnique()
                        .HasFilter("[codUsuario] IS NOT NULL");

                    b.ToTable("WhatsApps", "dbo");
                });

            modelBuilder.Entity("PresenteReciboPresente", b =>
                {
                    b.Property<int>("PresentescodPresente")
                        .HasColumnType("int");

                    b.Property<int>("listaPresenteReciboscodReciboPresente")
                        .HasColumnType("int");

                    b.HasKey("PresentescodPresente", "listaPresenteReciboscodReciboPresente");

                    b.HasIndex("listaPresenteReciboscodReciboPresente");

                    b.ToTable("PresenteReciboPresente", "dbo");
                });

            modelBuilder.Entity("BixWeb.Models.Campanha", b =>
                {
                    b.HasOne("BixWeb.Models.UsuarioFilial", "Usuariofilial")
                        .WithMany("Campanhas")
                        .HasForeignKey("codUsuario", "codFilial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuariofilial");
                });

            modelBuilder.Entity("BixWeb.Models.Convidado", b =>
                {
                    b.HasOne("BixWeb.Models.Ingresso", "Ingresso")
                        .WithMany()
                        .HasForeignKey("IngressocodIngresso");

                    b.HasOne("BixWeb.Models.Convite", "Convite")
                        .WithMany("Convidados")
                        .HasForeignKey("codConvite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Convite");

                    b.Navigation("Ingresso");
                });

            modelBuilder.Entity("BixWeb.Models.Convite", b =>
                {
                    b.HasOne("BixWeb.Models.Usuario", "Usuario")
                        .WithMany("Convites")
                        .HasForeignKey("codCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BixWeb.Models.Evento", "Evento")
                        .WithMany("Convites")
                        .HasForeignKey("codEvento");

                    b.HasOne("BixWeb.Models.UsuarioFilial", "UsuarioFilial")
                        .WithMany("Convites")
                        .HasForeignKey("codCriador", "codFilial")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Evento");

                    b.Navigation("Usuario");

                    b.Navigation("UsuarioFilial");
                });

            modelBuilder.Entity("BixWeb.Models.Cupom", b =>
                {
                    b.HasOne("BixWeb.Models.Campanha", "Campanha")
                        .WithMany("Cupons")
                        .HasForeignKey("codCampanha");

                    b.HasOne("BixWeb.Models.Usuario", "usuario")
                        .WithMany("Cupons")
                        .HasForeignKey("codcliente");

                    b.HasOne("BixWeb.Models.UsuarioFilial", "UsuarioFilial")
                        .WithMany("Cupons")
                        .HasForeignKey("codCriador", "codFilial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campanha");

                    b.Navigation("UsuarioFilial");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("BixWeb.Models.Dispositivo", b =>
                {
                    b.HasOne("BixWeb.Models.Filial", "Filial")
                        .WithMany("Dispositivos")
                        .HasForeignKey("codFilial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filial");
                });

            modelBuilder.Entity("BixWeb.Models.Evento", b =>
                {
                    b.HasOne("BixWeb.Models.Filial", null)
                        .WithMany("Eventos")
                        .HasForeignKey("FilialcodFilial");

                    b.HasOne("BixWeb.Models.Usuario", "Usuario")
                        .WithMany("eventos")
                        .HasForeignKey("UsuariocodUsuario");

                    b.HasOne("BixWeb.Models.Endereco", "Endereco")
                        .WithMany("Eventos")
                        .HasForeignKey("codEndereco")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BixWeb.Models.UsuarioFilial", "UsuarioFilial")
                        .WithMany("Eventos")
                        .HasForeignKey("codUsuario", "codFilial")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Endereco");

                    b.Navigation("Usuario");

                    b.Navigation("UsuarioFilial");
                });

            modelBuilder.Entity("BixWeb.Models.Filial", b =>
                {
                    b.HasOne("BixWeb.Models.Endereco", "Endereco")
                        .WithOne("Filial")
                        .HasForeignKey("BixWeb.Models.Filial", "codEndereco")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("BixWeb.Models.Ingresso", b =>
                {
                    b.HasOne("BixWeb.Models.Convite", "Convite")
                        .WithMany("Ingressos")
                        .HasForeignKey("codConvite");

                    b.HasOne("BixWeb.Models.Lote", "Lote")
                        .WithMany("Ingressos")
                        .HasForeignKey("codLote")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BixWeb.Models.ReciboIngresso", "ReciboIngresso")
                        .WithMany("ingressos")
                        .HasForeignKey("codReciboIngresso")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Convite");

                    b.Navigation("Lote");

                    b.Navigation("ReciboIngresso");
                });

            modelBuilder.Entity("BixWeb.Models.ListaPresente", b =>
                {
                    b.HasOne("BixWeb.Models.Convite", "convite")
                        .WithOne("ListaPresente")
                        .HasForeignKey("BixWeb.Models.ListaPresente", "codConvite")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BixWeb.Models.Usuario", "usuario")
                        .WithMany("listaPresentes")
                        .HasForeignKey("codUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("convite");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("BixWeb.Models.LoginAPI", b =>
                {
                    b.HasOne("BixWeb.Models.Usuario", "usuario")
                        .WithOne("loginAPI")
                        .HasForeignKey("BixWeb.Models.LoginAPI", "codUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("BixWeb.Models.Lote", b =>
                {
                    b.HasOne("BixWeb.Models.Evento", "Evento")
                        .WithMany("Lotes")
                        .HasForeignKey("codEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("BixWeb.Models.Modificador", b =>
                {
                    b.HasOne("BixWeb.Models.Filial", "Filial")
                        .WithMany()
                        .HasForeignKey("codfilial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BixWeb.Models.Produto", "Produto")
                        .WithMany("Modificadores")
                        .HasForeignKey("codproduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filial");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("BixWeb.Models.Preco", b =>
                {
                    b.HasOne("BixWeb.Models.Filial", "Filial")
                        .WithMany("precos")
                        .HasForeignKey("codFilial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BixWeb.Models.Produto", "Produto")
                        .WithMany("Precos")
                        .HasForeignKey("codProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filial");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("BixWeb.Models.Presente", b =>
                {
                    b.HasOne("BixWeb.Models.ListaPresente", "listaPresente")
                        .WithMany("presentes")
                        .HasForeignKey("codListaPresente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("listaPresente");
                });

            modelBuilder.Entity("BixWeb.Models.Produto", b =>
                {
                    b.HasOne("BixWeb.Models.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("codCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("BixWeb.Models.ProdutoCampanha", b =>
                {
                    b.HasOne("BixWeb.Models.Campanha", "Campanha")
                        .WithMany("produtosCampanha")
                        .HasForeignKey("codCampanha");

                    b.HasOne("BixWeb.Models.Evento", "Evento")
                        .WithMany("ProdutosEvento")
                        .HasForeignKey("codEvento");

                    b.HasOne("BixWeb.Models.Produto", "Produto")
                        .WithMany("ProdutosCampanha")
                        .HasForeignKey("codProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campanha");

                    b.Navigation("Evento");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("BixWeb.Models.ReciboIngresso", b =>
                {
                    b.HasOne("BixWeb.Models.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuariocodUsuario");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("BixWeb.Models.ReciboPresente", b =>
                {
                    b.HasOne("BixWeb.Models.Convite", "convite")
                        .WithMany("recibosPresentes")
                        .HasForeignKey("codConvite")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BixWeb.Models.Usuario", "usuario")
                        .WithMany("recibosPresentes")
                        .HasForeignKey("codUsuario")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("convite");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("BixWeb.Models.RegistroLogin", b =>
                {
                    b.HasOne("BixWeb.Models.Dispositivo", "Dispositivo")
                        .WithMany("RegistroLogins")
                        .HasForeignKey("codDispositivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dispositivo");
                });

            modelBuilder.Entity("BixWeb.Models.UsuarioFilial", b =>
                {
                    b.HasOne("BixWeb.Models.Filial", "Filial")
                        .WithMany("Usuarios")
                        .HasForeignKey("codFilial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BixWeb.Models.RegistroLogin", "RegistroLogin")
                        .WithOne("UsuarioFilial")
                        .HasForeignKey("BixWeb.Models.UsuarioFilial", "codRegistro");

                    b.HasOne("BixWeb.Models.Usuario", "Usuario")
                        .WithMany("filiais")
                        .HasForeignKey("codUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filial");

                    b.Navigation("RegistroLogin");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BixWeb.Models.Voucher", b =>
                {
                    b.HasOne("BixWeb.Models.Campanha", "Campanha")
                        .WithMany("Vouchers")
                        .HasForeignKey("codCampanha")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BixWeb.Models.Usuario", "Cliente")
                        .WithMany("Vouchers")
                        .HasForeignKey("codCliente")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BixWeb.Models.UsuarioFilial", "UsuarioFilial")
                        .WithMany("Vouchers")
                        .HasForeignKey("codCriador", "codFilial")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campanha");

                    b.Navigation("Cliente");

                    b.Navigation("UsuarioFilial");
                });

            modelBuilder.Entity("BixWeb.Models.WhatsApp", b =>
                {
                    b.HasOne("BixWeb.Models.Filial", "Filial")
                        .WithOne("WhatsApp")
                        .HasForeignKey("BixWeb.Models.WhatsApp", "codFilial");

                    b.HasOne("BixWeb.Models.Usuario", "Usuario")
                        .WithOne("WhatsApp")
                        .HasForeignKey("BixWeb.Models.WhatsApp", "codUsuario")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Filial");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PresenteReciboPresente", b =>
                {
                    b.HasOne("BixWeb.Models.Presente", null)
                        .WithMany()
                        .HasForeignKey("PresentescodPresente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BixWeb.Models.ReciboPresente", null)
                        .WithMany()
                        .HasForeignKey("listaPresenteReciboscodReciboPresente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BixWeb.Models.Campanha", b =>
                {
                    b.Navigation("Cupons");

                    b.Navigation("Vouchers");

                    b.Navigation("produtosCampanha");
                });

            modelBuilder.Entity("BixWeb.Models.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("BixWeb.Models.Convite", b =>
                {
                    b.Navigation("Convidados");

                    b.Navigation("Ingressos");

                    b.Navigation("ListaPresente");

                    b.Navigation("recibosPresentes");
                });

            modelBuilder.Entity("BixWeb.Models.Dispositivo", b =>
                {
                    b.Navigation("RegistroLogins");
                });

            modelBuilder.Entity("BixWeb.Models.Endereco", b =>
                {
                    b.Navigation("Eventos");

                    b.Navigation("Filial");
                });

            modelBuilder.Entity("BixWeb.Models.Evento", b =>
                {
                    b.Navigation("Convites");

                    b.Navigation("Lotes");

                    b.Navigation("ProdutosEvento");
                });

            modelBuilder.Entity("BixWeb.Models.Filial", b =>
                {
                    b.Navigation("Dispositivos");

                    b.Navigation("Eventos");

                    b.Navigation("Usuarios");

                    b.Navigation("WhatsApp");

                    b.Navigation("precos");
                });

            modelBuilder.Entity("BixWeb.Models.ListaPresente", b =>
                {
                    b.Navigation("presentes");
                });

            modelBuilder.Entity("BixWeb.Models.Lote", b =>
                {
                    b.Navigation("Ingressos");
                });

            modelBuilder.Entity("BixWeb.Models.Produto", b =>
                {
                    b.Navigation("Modificadores");

                    b.Navigation("Precos");

                    b.Navigation("ProdutosCampanha");
                });

            modelBuilder.Entity("BixWeb.Models.ReciboIngresso", b =>
                {
                    b.Navigation("ingressos");
                });

            modelBuilder.Entity("BixWeb.Models.RegistroLogin", b =>
                {
                    b.Navigation("UsuarioFilial");
                });

            modelBuilder.Entity("BixWeb.Models.Usuario", b =>
                {
                    b.Navigation("Convites");

                    b.Navigation("Cupons");

                    b.Navigation("Vouchers");

                    b.Navigation("WhatsApp");

                    b.Navigation("eventos");

                    b.Navigation("filiais");

                    b.Navigation("listaPresentes");

                    b.Navigation("loginAPI");

                    b.Navigation("recibosPresentes");
                });

            modelBuilder.Entity("BixWeb.Models.UsuarioFilial", b =>
                {
                    b.Navigation("Campanhas");

                    b.Navigation("Convites");

                    b.Navigation("Cupons");

                    b.Navigation("Eventos");

                    b.Navigation("Vouchers");
                });
#pragma warning restore 612, 618
        }
    }
}
