@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<BixWeb.Models.Campanha>

@{
    ViewData["Title"] = "Gestão de Campanhas";
    // Variáveis de filtro do servidor não são mais necessárias para a lógica do frontend,
    // mas podem ser mantidas se houver uma necessidade inicial de filtro no carregamento.
    var currentSearch = ViewBag.CurrentSearch as string;
    var currentStatus = ViewBag.CurrentStatus as string;
    var currentFilial = ViewBag.CurrentFilial as string;
}

@section Styles {
    <link rel="stylesheet" href="~/css/Pages/Campanhas/index.css" asp-append-version="true"/>
    <style>
        /* Esconde o spinner de paginação, já que o filtro é no cliente */
        .pagination-container .loading-spinner {
            display: none !important;
        }
    </style>
}

<div id="campaigns-page">
    <!-- Cabeçalho da Página Padronizado -->
    <div class="page-header">
        <div class="page-header-content">
            <h1>@ViewData["Title"]</h1>
            <p class="page-subtitle">Gerencie e monitore suas campanhas promocionais</p>
        </div>
        <a asp-action="Create" class="btn btn-primary-custom btn-create-campaign">
            <i class="bi bi-plus-lg me-2"></i>
            Criar Nova Campanha
        </a>
    </div>

    <!-- Estatísticas das Campanhas -->
    <div class="campaigns-stats mb-4">
        <div class="row g-3">
            <div class="col-md-3 col-6">
                <div class="stat-card">
                    <div class="stat-icon bg-primary">
                        <i class="bi bi-megaphone-fill"></i>
                    </div>
                    <div class="stat-content">
                        <h3 class="stat-number">@Model.Count()</h3>
                        <p class="stat-label">Total de Campanhas</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3 col-6">
                <div class="stat-card">
                    <div class="stat-icon bg-success">
                        <i class="bi bi-check-circle-fill"></i>
                    </div>
                    <div class="stat-content">
                        <h3 class="stat-number">@Model.Count(c => c.campanhaAtiva)</h3>
                        <p class="stat-label">Campanhas Ativas</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3 col-6">
                <div class="stat-card">
                    <div class="stat-icon bg-warning">
                        <i class="bi bi-pause-circle-fill"></i>
                    </div>
                    <div class="stat-content">
                        <h3 class="stat-number">@Model.Count(c => !c.campanhaAtiva)</h3>
                        <p class="stat-label">Campanhas Pausadas</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3 col-6">
                <div class="stat-card">
                    <div class="stat-icon bg-info">
                        <i class="bi bi-building"></i>
                    </div>
                    <div class="stat-content">
                        <h3 class="stat-number">@Model.Where(c => c.Usuariofilial?.Filial?.nome != null).Select(c => c.Usuariofilial!.Filial!.nome).Distinct().Count()</h3>
                        <p class="stat-label">Filiais Ativas</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filtros & View Toggle -->
    <div class="filter-bar">
        <div class="filter-bar-header">
            <div class="d-flex align-items-center gap-2">
                <i class="bi bi-funnel text-muted"></i>
                <span class="filter-title">Filtros e Pesquisa</span>
            </div>
            <!-- View Toggle -->
            <div class="btn-group view-toggle" role="group">
                <button type="button" id="listViewBtn" class="btn btn-outline-secondary active" title="Visualização em Lista">
                    <i class="bi bi-list-ul"></i>
                </button>
                <button type="button" id="cardViewBtn" class="btn btn-outline-secondary" title="Visualização em Cards">
                    <i class="bi bi-grid-3x3-gap-fill"></i>
                </button>
            </div>
        </div>
        
        <div class="filter-controls">
            <!-- Search (flexível) -->
            <div class="search-wrapper">
                <label class="filter-label">Pesquisar</label>
                <div class="position-relative search-container">
                    <i class="bi bi-search position-absolute search-icon"></i>
                    <input type="text" id="searchInput" class="form-control search-input" placeholder="Pesquisar por campanha ou filial...">
                </div>
            </div>

            <!-- Filtros para Desktop -->
            <div class="desktop-filters d-none d-md-flex gap-3">
                <!-- Status Filter -->
                <div class="filter-group">
                    <label class="filter-label">Status</label>
                    <select name="statusFilter" class="form-select filter-select">
                        <option value="">Todos os Status</option>
                        <option value="true">Ativa</option>
                        <option value="false">Pausada</option>
                    </select>
                </div>
                <!-- Branch Filter -->
                <div class="filter-group">
                    <label class="filter-label">Filial</label>
                    <select name="filialFilter" class="form-select filter-select" id="filialFilter">
                        <option value="">Todas as Filiais</option>
                        @{
                            var filiais = Model.Where(c => c.Usuariofilial?.Filial != null)
                                                .Select(c => new {
                                                    codFilial = c.Usuariofilial!.Filial!.codFilial,
                                                    nome = c.Usuariofilial!.Filial!.nome
                                                }).Distinct().OrderBy(f => f.nome);
                        }
                        @foreach (var filial in filiais)
                        {
                            <option value="@filial.codFilial">
                                @filial.nome
                            </option>
                        }
                    </select>
                </div>
                <div class="filter-actions">
                    <button type="button" id="clearFiltersBtn" class="btn btn-outline-secondary btn-clear-filters">
                        <i class="bi bi-arrow-clockwise me-1"></i>
                        Limpar Filtros
                    </button>
                </div>
            </div>

            <!-- Botão de Filtro para Mobile -->
            <button type="button" id="mobileFilterBtn" class="btn btn-outline-primary d-md-none mobile-filter-btn">
                <i class="bi bi-funnel-fill me-1"></i>
                Filtros
            </button>
        </div>
    </div>

    <!-- Modal de Filtros para Mobile -->
    <div class="filter-modal-overlay" id="filterModalOverlay">
        <div class="filter-modal-content">
            <div class="filter-modal-header">
                <h5 class="modal-title">Filtros</h5>
                <button type="button" class="btn-close" id="closeFilterModal"></button>
            </div>
            <div class="filter-modal-body">
                <!-- Status Filter -->
                <div class="mb-3">
                    <label for="statusFilterModal" class="form-label">Status</label>
                    <select id="statusFilterModal" class="form-select">
                        <option value="">Todos os Status</option>
                        <option value="true">Ativa</option>
                        <option value="false">Pausada</option>
                    </select>
                </div>
                <!-- Branch Filter -->
                <div class="mb-3">
                    <label for="filialFilterModal" class="form-label">Filial</label>
                    <select id="filialFilterModal" class="form-select">
                        <option value="">Todas as Filiais</option>
                         @foreach (var filial in filiais)
                        {
                            <option value="@filial.codFilial">@filial.nome</option>
                        }
                    </select>
                </div>
                <button type="button" id="clearFiltersModalBtn" class="btn btn-outline-secondary w-100">Limpar Tudo</button>
                <button type="button" id="applyFiltersModalBtn" class="btn btn-primary-custom w-100 mt-2">Aplicar Filtros</button>
            </div>
        </div>
    </div>
    
    <!-- Tabela de Campanhas Aprimorada -->
    <div id="listView" class="table-wrapper">
        <div class="table-responsive">
            <table class="table campaigns-table align-middle">
                <thead>
                    <tr>
                        <th scope="col" class="campaign-name-col"><i class="bi bi-megaphone me-2"></i>Campanha</th>
                        <th scope="col" class="filial-col"><i class="bi bi-building me-2"></i>Filial</th>
                        <th scope="col" class="status-col"><i class="bi bi-toggle-on me-2"></i>Status</th>
                        <th scope="col" class="date-col"><i class="bi bi-calendar-event me-2"></i>Data de Postagem</th>
                        <th scope="col" class="text-center actions-col"><i class="bi bi-gear me-2"></i>Ações</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var campanha in Model)
                    {
                        <tr class="campaign-row"
                            data-nome="@campanha.nomeCampanha.ToLower()"
                            data-filial="@(campanha.Usuariofilial?.Filial?.nome?.ToLower() ?? "n/a")"
                            data-status="@campanha.campanhaAtiva.ToString().ToLower()">
                            <td data-label="Campanha" class="campaign-name">
                                <div class="campaign-name-content">
                                    <span class="fw-bold campaign-title-table">@campanha.nomeCampanha</span>
                                </div>
                            </td>
                            <td data-label="Filial" class="filial-name">
                                <span class="filial-badge-table">
                                    <i class="bi bi-building me-1"></i>
                                    @(campanha.Usuariofilial?.Filial?.nome ?? "N/A")
                                </span>
                            </td>
                            <td data-label="Status" class="campaign-status">
                                @if (campanha.campanhaAtiva)
                                {
                                    <span class="badge status-badge-active"><i class="bi bi-play-circle-fill me-1"></i>Ativa</span>
                                }
                                else
                                {
                                    <span class="badge status-badge-paused"><i class="bi bi-pause-circle-fill me-1"></i>Pausada</span>
                                }
                            </td>
                            <td data-label="Postagem" class="campaign-date">
                                <span class="date-display">@campanha.dataPostCampanha.ToString("dd/MM/yyyy")</span>
                                <small class="text-muted d-block">@campanha.dataPostCampanha.ToString("HH:mm")</small>
                            </td>
                            <td data-label="Ações" class="campaign-actions-cell">
                                <div class="action-buttons">
                                    <div class="dropdown">
                                        <button class="btn btn-action-icon dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false" title="Mais ações">
                                            <i class="bi bi-three-dots-vertical"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end">
                                            <li><a class="dropdown-item" asp-action="Index" asp-controller="ProdutosCampanha" asp-route-id="@campanha.codCampanha"><i class="bi bi-cart4"></i>Produtos da Campanha</a></li>
                                            <li><a class="dropdown-item" asp-action="Produtos" asp-route-id="@campanha.codCampanha"><i class="bi bi-badge-ad"></i>Anúncio de produtos</a></li>
                                            <li><hr class="dropdown-divider"></li>
                                            <li><a class="dropdown-item" asp-action="CardapioImpresso" asp-route-id="@campanha.codCampanha" asp-route-formato="1"><i class="bi bi-file-earmark-pdf"></i>Cardápio em PDF</a></li>
                                            <li><a class="dropdown-item" asp-action="CardapioImpresso" asp-route-id="@campanha.codCampanha" asp-route-formato="2"><i class="bi bi-filetype-jpg"></i>Cardápio em JPEG</a></li>
                                        </ul>
                                    </div>
                                    <a asp-action="edit" asp-route-id="@campanha.codCampanha" class="btn btn-action-icon btn-action-edit" title="Editar Campanha"><i class="bi bi-pencil-square"></i></a>
                                    <button class="btn btn-action-icon btn-action-danger" title="Excluir Campanha" data-id="@campanha.codCampanha" id="deleteBtn@(campanha.codCampanha)"><i class="bi bi-trash3-fill"></i></button>
                                </div>
                            </td>
                        </tr>
                    }
                    <tr id="noResultsList" class="campaign-row" style="display: none;">
                        <td colspan="5" class="text-center p-5">
                            <i class="bi bi-search fs-3 text-muted"></i>
                            <h5 class="mt-3">Nenhuma campanha encontrada</h5>
                            <p class="text-muted">Tente ajustar seus filtros de pesquisa.</p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Campaigns Card View -->
    <div id="cardView" class="d-none">
        <div class="row g-4">
            @foreach (var campanha in Model)
            {
                <div class="col-xl-4 col-lg-6 col-md-6 campaign-card-wrapper"
                     data-nome="@campanha.nomeCampanha.ToLower()"
                     data-filial="@(campanha.Usuariofilial?.Filial?.nome?.ToLower() ?? "n/a")"
                     data-status="@campanha.campanhaAtiva.ToString().ToLower()">
                    <div class="campaign-card data-card h-100">
                        <div class="campaign-card-header">
                            <div class="d-flex justify-content-between align-items-start">
                                <div class="campaign-meta">
                                    <span class="badge filial-badge"><i class="bi bi-building me-1"></i>@(campanha.Usuariofilial?.Filial?.nome ?? "N/A")</span>
                                </div>
                                @if (campanha.campanhaAtiva)
                                {
                                    <span class="badge status-badge-active"><i class="bi bi-play-circle-fill me-1"></i>Ativa</span>
                                }
                                else
                                {
                                    <span class="badge status-badge-paused"><i class="bi bi-pause-circle-fill me-1"></i>Pausada</span>
                                }
                            </div>
                        </div>
                        <div class="card-body">
                            <h5 class="campaign-title">@campanha.nomeCampanha</h5>
                            <div class="campaign-info">
                                <div class="info-item">
                                    <i class="bi bi-calendar-event text-muted"></i>
                                    <span class="info-label">Postagem:</span>
                                    <span class="info-value">@campanha.dataPostCampanha.ToString("dd/MM/yyyy")</span>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <div class="campaign-actions">
                                <div class="quick-actions">
                                    <a asp-action="Index" asp-controller="ProdutosCampanha" asp-route-id="@campanha.codCampanha" class="btn btn-action-icon-card" title="Gerenciar Produtos"><i class="bi bi-cart4"></i></a>
                                    <a asp-action="Produtos" asp-route-id="@campanha.codCampanha" class="btn btn-action-icon-card" title="Criar Anúncio"><i class="bi bi-badge-ad"></i></a>
                                    <div class="dropdown">
                                        <button class="btn btn-action-icon-card dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false" title="Gerar Cardápio"><i class="bi bi-file-earmark-text"></i></button>
                                        <ul class="dropdown-menu">
                                            <li><a class="dropdown-item" asp-action="CardapioImpresso" asp-route-id="@campanha.codCampanha" asp-route-formato="1"><i class="bi bi-file-earmark-pdf"></i>Cardápio PDF</a></li>
                                            <li><a class="dropdown-item" asp-action="CardapioImpresso" asp-route-id="@campanha.codCampanha" asp-route-formato="2"><i class="bi bi-filetype-jpg"></i>Cardápio JPEG</a></li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="main-actions">
                                    <a asp-action="edit" asp-route-id="@campanha.codCampanha" class="btn btn-action-icon-card btn-action-edit" title="Editar Campanha"><i class="bi bi-pencil-square"></i></a>
                                    <button data-id="@campanha.codCampanha" id="deleteBtnCard@(campanha.codCampanha)" class="btn btn-action-icon-card btn-action-danger" title="Excluir Campanha"><i class="bi bi-trash3-fill"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            <div id="noResultsCard" class="col-12 text-center p-5" style="display: none;">
                <i class="bi bi-search fs-3 text-muted"></i>
                <h5 class="mt-3">Nenhuma campanha encontrada</h5>
                <p class="text-muted">Tente ajustar seus filtros de pesquisa.</p>
           </div>
        </div>
    </div>
</div>

<!-- Paginação Aprimorada -->
@if (Model.PageCount > 1)
{
    <div class="pagination-wrapper">
        <div class="pagination-info">
            <span class="pagination-text">Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @(Model.PageCount) (@Model.TotalItemCount total de campanhas)</span>
        </div>
        <div class="pagination-controls">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = currentSearch, statusFilter = currentStatus, filialFilter = currentFilial }), new PagedListRenderOptions
            {
                UlElementClasses = new[] { "pagination", "custom-pagination" },
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" },
                ActiveLiElementClass = "active"
            })
        </div>
    </div>
}

<!-- Popups de Confirmação de Exclusão -->
@foreach (var campanha in Model)
{
    <div id="popup@(campanha.codCampanha)" class="popup-confirm">
        <div class="popup-confirm-content">
            <div class="popup-icon"><i class="bi bi-exclamation-triangle-fill"></i></div>
            <h4 class="popup-title">Confirmar Exclusão</h4>
            <p class="popup-message">Tem certeza que deseja excluir a campanha <strong>"@campanha.nomeCampanha"</strong>?</p>
            <p class="popup-warning">Esta ação não pode ser desfeita.</p>
            <div class="popup-actions">
                <button class="btn btn-outline-secondary popup-btn-cancel" id="cancelBtn@(campanha.codCampanha)" data-id="@campanha.codCampanha"><i class="bi bi-x-lg me-2"></i>Cancelar</button>
                <button class="btn btn-danger popup-btn-confirm" id="confirmDeleteBtn@(campanha.codCampanha)" data-id="@campanha.codCampanha"><i class="bi bi-trash3-fill me-2"></i>Sim, excluir</button>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
    document.addEventListener('DOMContentLoaded', () => {
        // --- LÓGICA DE VISUALIZAÇÃO (LISTA/CARD) ---
        const listViewBtn = document.getElementById('listViewBtn');
        const cardViewBtn = document.getElementById('cardViewBtn');
        const listView = document.getElementById('listView');
        const cardView = document.getElementById('cardView');
        
        if (listViewBtn && cardViewBtn) {
            listViewBtn.addEventListener('click', () => {
                listViewBtn.classList.add('active');
                cardViewBtn.classList.remove('active');
                listView.classList.remove('d-none');
                cardView.classList.add('d-none');
            });

            cardViewBtn.addEventListener('click', () => {
                cardViewBtn.classList.add('active');
                listViewBtn.classList.remove('active');
                cardView.classList.remove('d-none');
                listView.classList.add('d-none');
            });
        }

        // --- LÓGICA DE EXCLUSÃO ---
        // Adiciona event listener para os botões de delete (tanto da lista quanto dos cards)
        document.querySelectorAll('[id^="deleteBtn"]').forEach(button => {
            button.addEventListener('click', function() {
                const id = this.getAttribute('data-id');
                const popup = document.getElementById('popup' + id);
                if (popup) {
                    popup.style.display = 'flex';
                }
            });
        });

        document.querySelectorAll('[id^="cancelBtn"]').forEach(button => {
            button.addEventListener('click', function() {
                const id = this.getAttribute('data-id');
                const popup = document.getElementById('popup' + id);
                if (popup) {
                    popup.style.display = 'none';
                }
            });
        });

        document.querySelectorAll('[id^="confirmDeleteBtn"]').forEach(button => {
            button.addEventListener('click', function() {
                const id = this.getAttribute('data-id');
                const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value;
                
                fetch(`/Campanhas/Delete/${id}`, {
                    method: 'POST',
                    headers: { 'RequestVerificationToken': token }
                })
                .then(response => {
                    if (response.ok) {
                        window.location.reload();
                    } else {
                        // Idealmente, usar um modal de notificação em vez de alert
                        alert('Erro ao excluir a campanha.');
                    }
                })
                .catch(error => {
                    console.error('Erro:', error);
                    alert('Erro ao excluir a campanha.');
                });
            });
        });

        // --- LÓGICA DE CORREÇÃO DE DROPDOWNS EM TABELAS ---
        document.querySelectorAll('.table-responsive').forEach(wrapper => {
            wrapper.querySelectorAll('.dropdown-toggle').forEach(dd => {
                dd.addEventListener('show.bs.dropdown', e => e.target.closest('tr')?.classList.add('dropdown-open'));
                dd.addEventListener('hide.bs.dropdown', e => e.target.closest('tr')?.classList.remove('dropdown-open'));
            });
        });

        // --- NOVA LÓGICA DE FILTRO (FRONTEND) ---
        const searchInput = document.getElementById('searchInput');
        const statusFilter = document.querySelector('select[name="statusFilter"]');
        const filialFilter = document.getElementById('filialFilter');
        const clearFiltersBtn = document.getElementById('clearFiltersBtn');
        
        const campaignRows = document.querySelectorAll('#listView .campaign-row');
        const campaignCards = document.querySelectorAll('#cardView .campaign-card-wrapper');
        
        const noResultsList = document.getElementById('noResultsList');
        const noResultsCard = document.getElementById('noResultsCard');

        function applyFilters() {
            const searchTerm = searchInput.value.toLowerCase().trim();
            const statusValue = statusFilter.value;
            const filialText = filialFilter.value === '' ? '' : filialFilter.options[filialFilter.selectedIndex].text.toLowerCase();

            // Filtrar a visão em lista
            let listVisibleCount = 0;
            campaignRows.forEach(row => {
                if (row.id === 'noResultsList') return; // Pula a linha de "nenhum resultado"

                const nome = row.dataset.nome || '';
                const filial = row.dataset.filial || '';
                const status = row.dataset.status || '';

                const searchMatch = searchTerm === '' || nome.includes(searchTerm) || filial.includes(searchTerm);
                const statusMatch = statusValue === '' || status === statusValue;
                const filialMatch = filialText === '' || filial === filialText;

                if (searchMatch && statusMatch && filialMatch) {
                    row.style.display = ''; // 'table-row' pode causar problemas de layout, '' é mais seguro
                    listVisibleCount++;
                } else {
                    row.style.display = 'none';
                }
            });
            noResultsList.style.display = listVisibleCount === 0 ? 'table-row' : 'none';

            // Filtrar a visão em cards
            let cardVisibleCount = 0;
            campaignCards.forEach(cardWrapper => {
                const nome = cardWrapper.dataset.nome || '';
                const filial = cardWrapper.dataset.filial || '';
                const status = cardWrapper.dataset.status || '';

                const searchMatch = searchTerm === '' || nome.includes(searchTerm) || filial.includes(searchTerm);
                const statusMatch = statusValue === '' || status === statusValue;
                const filialMatch = filialText === '' || filial === filialText;

                if (searchMatch && statusMatch && filialMatch) {
                    cardWrapper.style.display = '';
                    cardVisibleCount++;
                } else {
                    cardWrapper.style.display = 'none';
                }
            });
            noResultsCard.style.display = cardVisibleCount === 0 ? 'block' : 'none';
        }

        // Event Listeners para os filtros
        searchInput.addEventListener('input', applyFilters);
        statusFilter.addEventListener('change', applyFilters);
        filialFilter.addEventListener('change', applyFilters);

        clearFiltersBtn.addEventListener('click', () => {
            searchInput.value = '';
            statusFilter.value = '';
            filialFilter.value = '';
            applyFilters();
            // Sincroniza o modal mobile
            if (statusFilterModal) statusFilterModal.value = '';
            if (filialFilterModal) filialFilterModal.value = '';
        });

        // --- LÓGICA DO MODAL DE FILTRO MOBILE ---
        const mobileFilterBtn = document.getElementById('mobileFilterBtn');
        const filterModalOverlay = document.getElementById('filterModalOverlay');
        const closeFilterModal = document.getElementById('closeFilterModal');
        const statusFilterModal = document.getElementById('statusFilterModal');
        const filialFilterModal = document.getElementById('filialFilterModal');
        const applyFiltersModalBtn = document.getElementById('applyFiltersModalBtn');
        const clearFiltersModalBtn = document.getElementById('clearFiltersModalBtn');

        const openModal = () => {
            statusFilterModal.value = statusFilter.value;
            filialFilterModal.value = filialFilter.value;
            filterModalOverlay.style.display = 'flex';
        };

        const closeModal = () => {
            filterModalOverlay.style.display = 'none';
        };
        
        mobileFilterBtn.addEventListener('click', openModal);
        closeFilterModal.addEventListener('click', closeModal);
        filterModalOverlay.addEventListener('click', e => {
            if (e.target === filterModalOverlay) closeModal();
        });

        applyFiltersModalBtn.addEventListener('click', () => {
            statusFilter.value = statusFilterModal.value;
            filialFilter.value = filialFilterModal.value;
            applyFilters();
            closeModal();
        });

        clearFiltersModalBtn.addEventListener('click', () => {
            statusFilterModal.value = '';
            filialFilterModal.value = '';
            clearFiltersBtn.click(); // Dispara o evento do botão principal
            // Não precisa fechar o modal, o usuário pode querer aplicar filtros em branco
        });
        
        // Aplica o filtro inicial no carregamento da página, caso haja valores pré-definidos
        applyFilters();
    });
    </script>
}
